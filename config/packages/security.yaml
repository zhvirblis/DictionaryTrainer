security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 13
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #users_in_memory: { memory: null }
        database_users:
            entity: { class: App:User , property: username }
        #jwt_user_provider:
        #   id: App\Security\JwtUserProvider
        #
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        #smain:
        #    anonymous: ~
        #login:
        #    pattern:  ^/api/login
        #    stateless: true
        #   anonymous: true
        #   json_login:
        #       provider:                 jwt_user_provider
        #       check_path:               /api/login_check
        #       success_handler:          lexik_jwt_authentication.handler.authentication_success
        #       failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        #       require_previous_session: false
        login:
            pattern:   ^/api/token
            anonymous: ~
        register:
            pattern:   ^/api/register
            anonymous: ~
        api:
            pattern:   ^/api
            http_basic: ~
            guard:
               authenticators:
                   - App\Security\JwtAuthenticator
        #   stateless: true
        #   provider: jwt_user_provider
        #   guard:
        #      authenticators:
        #           - lexik_jwt_authentication.jwt_token_authenticator
        #jwt:
        #    pattern: ^/api
        #   stateless: true
        #   guard:
        #       authenticator: App\Security\JwtUserAuthenticator
        #   provider: jwt_user_provider

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api/token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
        
